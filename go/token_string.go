// Code generated by "stringer -type=Token"; DO NOT EDIT.

package main

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TokErr - -1]
	_ = x[TokEof-1]
	_ = x[TokInt-2]
	_ = x[TokIdent-3]
	_ = x[TokFn-4]
	_ = x[TokLpar-5]
	_ = x[TokRpar-6]
	_ = x[TokLbrace-7]
	_ = x[TokRbrace-8]
	_ = x[TokLsq-9]
	_ = x[TokRsq-10]
	_ = x[TokColon-11]
	_ = x[TokLet-12]
	_ = x[TokAssign-13]
	_ = x[TokString-14]
	_ = x[TokSemi-15]
	_ = x[TokModule-16]
	_ = x[TokGte-17]
	_ = x[TokGt-18]
	_ = x[TokIf-19]
	_ = x[TokReturn-20]
	_ = x[TokDiv-21]
}

const (
	_Token_name_0 = "TokErr"
	_Token_name_1 = "TokEofTokIntTokIdentTokFnTokLparTokRparTokLbraceTokRbraceTokLsqTokRsqTokColonTokLetTokAssignTokStringTokSemiTokModuleTokGteTokGtTokIfTokReturnTokDiv"
)

var (
	_Token_index_1 = [...]uint8{0, 6, 12, 20, 25, 32, 39, 48, 57, 63, 69, 77, 83, 92, 101, 108, 117, 123, 128, 133, 142, 148}
)

func (i Token) String() string {
	switch {
	case i == -1:
		return _Token_name_0
	case 1 <= i && i <= 21:
		i -= 1
		return _Token_name_1[_Token_index_1[i]:_Token_index_1[i+1]]
	default:
		return "Token(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
